package uas.oop;

import static uas.oop.dbkoneksi.koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Yunita Cahya
 * TGL 28 JUNI 2025
 */
public class fKendaraan extends javax.swing.JFrame {
    DefaultTableModel DTM = new DefaultTableModel();

    
    /**
     * Creates new form fKendaraan
     */
    public fKendaraan() throws SQLException {
        initComponents();
    
        tblKend.setModel(DTM);
        DTM.addColumn("ID KENDARAAN");
        DTM.addColumn("NAMA PEMILIK ");
        DTM.addColumn("NO POLISI");
        DTM.addColumn("JENIS KENDARAAN");
        
        String[] opsiJENIS = {"Pilih Jenis Kendaraan","Mobil","Motor"};
        cbJENIS.removeAllItems();
        for(int i=0;i<2;i++){
            cbJENIS.addItem(opsiJENIS[i]);
        }
        
        //txJUR.setVisible(false);
        //cbJUR.setLocation(486,219);
        lsdtknd();
        clearform();
        tombol(false);
        cBARU.setEnabled(true);
        cTUTUP.setEnabled(true);
        fieldAktif(false);
        cbJENIS.setVisible(false);
               
    }
    private void tombol(boolean opsi) {
        cBARU.setEnabled(opsi);
        cUBAH.setEnabled(opsi);
        cHAPUS.setEnabled(opsi);
        cTUTUP.setEnabled(opsi);
    }
    private void fieldAktif(boolean opsi){
        txID.setEditable(opsi);
        txNAMA.setEditable(opsi);
        txNOP.setEditable(opsi);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txID = new javax.swing.JTextField();
        txNAMA = new javax.swing.JTextField();
        txNOP = new javax.swing.JTextField();
        cbJENIS = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKend = new javax.swing.JTable();
        cBARU = new javax.swing.JButton();
        cUBAH = new javax.swing.JButton();
        cHAPUS = new javax.swing.JButton();
        cTUTUP = new javax.swing.JButton();
        txJENIS = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lato Black", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Data Kendaraan");

        jLabel2.setText("ID KENDARAAN");

        jLabel3.setText("NAMA PEMILIK");

        jLabel4.setText("NO POLISI");

        jLabel5.setText("JENIS KENDARAAN");

        txID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txIDActionPerformed(evt);
            }
        });

        cbJENIS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblKend.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblKend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKendMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKend);

        cBARU.setText("Baru");
        cBARU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBARUActionPerformed(evt);
            }
        });

        cUBAH.setText("Ubah");
        cUBAH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cUBAHActionPerformed(evt);
            }
        });

        cHAPUS.setText("Hapus");
        cHAPUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cHAPUSActionPerformed(evt);
            }
        });

        cTUTUP.setText("Tutup");
        cTUTUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cTUTUPActionPerformed(evt);
            }
        });

        txJENIS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txJENISActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txID)
                            .addComponent(txNAMA)
                            .addComponent(txNOP)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbJENIS, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txJENIS, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(cBARU)
                        .addGap(26, 26, 26)
                        .addComponent(cUBAH)
                        .addGap(27, 27, 27)
                        .addComponent(cHAPUS)
                        .addGap(35, 35, 35)
                        .addComponent(cTUTUP))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txNAMA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txNOP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbJENIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txJENIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBARU)
                    .addComponent(cUBAH)
                    .addComponent(cHAPUS)
                    .addComponent(cTUTUP))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cBARUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBARUActionPerformed
        if(cBARU.getText().equals("Baru")){
            clearform();
            fieldAktif(true);
            
            txJENIS.setVisible(false);
            cbJENIS.setVisible(true);
            
            cBARU.setText("Simpan");
            cTUTUP.setText("Batal");
            cUBAH.setEnabled(false);
            cHAPUS.setEnabled(false);
        }else{
            try {
                storeData();
                lsdtknd();
            } catch (SQLException ex) {
                Logger.getLogger(fKendaraan.class.getName()).log(Level.SEVERE, null, ex);
            }
            cBARU.setText("Baru");
            cTUTUP.setText("Tutup");
            clearform();
            fieldAktif(false);
            
            txJENIS.setVisible(true);
            cbJENIS.setVisible(false);
        }
    }//GEN-LAST:event_cBARUActionPerformed

    private void txIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txIDActionPerformed

    private void cUBAHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cUBAHActionPerformed
        if(cUBAH.getText().equals("Ubah")){
            cUBAH.setText("Simpan");
            cTUTUP.setText("Batal");
            cBARU.setEnabled(false);
            cHAPUS.setEnabled(false);
            fieldAktif(true);
            txID.setEditable(false);
            txJENIS.setVisible(false);
            cbJENIS.setVisible(true);
            cbJENIS.setSelectedItem(txJENIS.getText());
        }else{
            
            try {
                updateData();
                lsdtknd();
            } catch (SQLException ex) {
                Logger.getLogger(fKendaraan.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            cUBAH.setText("Ubah");
            cTUTUP.setText("Tutup");
            cBARU.setEnabled(true);
            cUBAH.setEnabled(false);
            txJENIS.setVisible(true);
            cbJENIS.setVisible(false);
            fieldAktif(false);
            clearform();
            
        }
    }//GEN-LAST:event_cUBAHActionPerformed

    private void tblKendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKendMouseClicked
        txID.setText( tblKend.getValueAt( tblKend.getSelectedRow(), 0).toString() );
        txNAMA.setText( tblKend.getValueAt( tblKend.getSelectedRow(), 1).toString() );
        txNOP.setText( tblKend.getValueAt( tblKend.getSelectedRow(), 2).toString() );
        
        cUBAH.setEnabled(true);
        cHAPUS.setEnabled(true);
    }//GEN-LAST:event_tblKendMouseClicked

    private void txJENISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txJENISActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txJENISActionPerformed

    private void cHAPUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cHAPUSActionPerformed
        int opsi = JOptionPane.showOptionDialog(this, "Yakin akan Menghapus Data "+txID.getText() +"?", "Konfirmasi Hapus Data", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if(opsi==JOptionPane.YES_OPTION){
            try {
                destroyData();
                lsdtknd();
                clearform();
                cHAPUS.setEnabled(false);
                cUBAH.setEnabled(false);
                
                } catch (SQLException ex) {
                    Logger.getLogger(fKendaraan.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            }
    }//GEN-LAST:event_cHAPUSActionPerformed

    private void cTUTUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cTUTUPActionPerformed
        if(cTUTUP.getText().equals("Tutup")){
            int opsi = JOptionPane.showOptionDialog(this, "Yakin akan menutup Aplikai ?", "Konfirmasi Tutup Aplikasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if(opsi==JOptionPane.YES_OPTION){
                System.exit(0);
            }
            
            
        }else{
            cTUTUP.setText("Tutup");
            cBARU.setText("Baru");
            cUBAH.setText("Ubah");
            cBARU.setEnabled(true);
            cUBAH.setEnabled(false);
            cbJENIS.setVisible(false);
            txJENIS.setVisible(true);
            fieldAktif(false);
            clearform();
        }
    }//GEN-LAST:event_cTUTUPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fKendaraan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fKendaraan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fKendaraan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fKendaraan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new fKendaraan().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(fKendaraan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cBARU;
    private javax.swing.JButton cHAPUS;
    private javax.swing.JButton cTUTUP;
    private javax.swing.JButton cUBAH;
    private javax.swing.JComboBox<String> cbJENIS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKend;
    private javax.swing.JTextField txID;
    private javax.swing.JTextField txJENIS;
    private javax.swing.JTextField txNAMA;
    private javax.swing.JTextField txNOP;
    // End of variables declaration//GEN-END:variables
    private void lsdtknd() throws SQLException{
        Connection cnn = koneksi();
        
        DTM.getDataVector().removeAllElements();
        DTM.fireTableDataChanged();
        
        if( !cnn.isClosed()){
            PreparedStatement PS = cnn.prepareStatement("SELECT * FROM kendaraan;");
            ResultSet RS = PS.executeQuery();
            while( RS.next() ){
                Object[] dataknd = new Object[4];
                    dataknd[0] = RS.getString("IDKendaraan");
                    dataknd[1] = RS.getString("NAMA");
                    dataknd[2] = RS.getString("NoPolisi");
                    dataknd[3] = RS.getString("JENIS");
                    
                    DTM.addRow(dataknd);
            }
        }
    }
    private void clearform(){
        txNAMA.setText("");
        txNAMA.setText("");
        txNOP.setText("");
        txJENIS.setText("");
    }

    private void storeData() throws SQLException {
        Connection cnn = koneksi();
        String id = txID.getText();
        String nama = txNAMA.getText();
        String nopolisi = txNOP.getText();
        String jenis = String.valueOf( cbJENIS.getSelectedItem() );
        
        if(!cnn.isClosed()){
            PreparedStatement PS = cnn.prepareStatement("INSERT INTO kendaraan(IDKendaraan, NAMA, NoPolisi, JENIS) VALUES(?,?,?,?);");
            PS.setString(1, id);
            PS.setString(2, nama);
            PS.setString(3, nopolisi);
            PS.setString(4, jenis);
            PS.executeUpdate();
            cnn.close();
        }
    }
    
    private void updateData() throws SQLException {
        Connection cnn = koneksi();
        String id = txID.getText();
        String nama = txNAMA.getText();
        String nopolisi = txNOP.getText();
        String jenis = String.valueOf( cbJENIS.getSelectedItem() );
        
        if(!cnn.isClosed()){
            PreparedStatement PS = cnn.prepareStatement("UPDATE kendaraan SET NAMA=?,NoPolisi=?,JENIS=? WHERE IDKendaraan=?;");
            PS.setString(1, nama);
            PS.setString(2, nopolisi);
            PS.setString(3, jenis);
            PS.setString(4, id);
            PS.executeUpdate();
            cnn.close();
        }
    }
    
    private void destroyData() throws SQLException {
        Connection cnn = koneksi();
        String id = txID.getText();
                
        if(!cnn.isClosed()){
            PreparedStatement PS = cnn.prepareStatement("DELETE FROM kendaraan WHERE IDKendaraan=?;");
            PS.setString(1, id);
            PS.executeUpdate();
            cnn.close();
        }
    }
}
